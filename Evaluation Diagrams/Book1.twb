<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.19.0212.1312                               -->
<workbook original-version='18.1' source-build='2018.3.4 (20183.19.0212.1312)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='calc_segmentscore_optimized' inline='true' name='federated.0efyb7n0fj9el916uhsc9030j453' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='calc_segmentscore_optimized' name='textscan.0odx6aj03ijr5a118wjmp1ulpx45'>
            <connection class='textscan' directory='E:/UMKCStudies/Thesis/scoresgeneration' filename='calc_segmentscore_optimized.csv' password='' server='' />
          </named-connection>
          <named-connection caption='normalized_scores_optimized' name='textscan.0ybgt1k1wo6hha1dfygxq0dp0h5o'>
            <connection class='textscan' directory='E:/UMKCStudies/Thesis/scoresgeneration' filename='normalized_scores_optimized.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[calc_segmentscore_optimized.csv].[F1]' />
              <expression op='[normalized_scores_optimized.csv].[F1]' />
            </expression>
          </clause>
          <relation connection='textscan.0odx6aj03ijr5a118wjmp1ulpx45' name='calc_segmentscore_optimized.csv' table='[calc_segmentscore_optimized#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Unnamed: 0' ordinal='1' />
              <column datatype='string' name='streetname' ordinal='2' />
              <column datatype='integer' name='startstreet' ordinal='3' />
              <column datatype='integer' name='endstreet' ordinal='4' />
              <column datatype='real' name='segment_score' ordinal='5' />
              <column datatype='real' name='yelp_score' ordinal='6' />
              <column datatype='string' name='road_ids' ordinal='7' />
              <column datatype='string' name='address_nos' ordinal='8' />
              <column datatype='string' name='yelp_ids' ordinal='9' />
              <column datatype='string' name='yelp_address_nos' ordinal='10' />
              <column datatype='integer' name='accident_count' ordinal='11' />
              <column datatype='integer' name='business_count' ordinal='12' />
              <column datatype='real' name='ambulancer' ordinal='13' />
              <column datatype='real' name='bikedir' ordinal='14' />
              <column datatype='real' name='bikeinjury' ordinal='15' />
              <column datatype='real' name='bikepos' ordinal='16' />
              <column datatype='real' name='crashgrp' ordinal='17' />
              <column datatype='real' name='crashloc' ordinal='18' />
              <column datatype='real' name='crashtype' ordinal='19' />
              <column datatype='real' name='development' ordinal='20' />
              <column datatype='real' name='drvrinjury' ordinal='21' />
            </columns>
          </relation>
          <relation connection='textscan.0ybgt1k1wo6hha1dfygxq0dp0h5o' name='normalized_scores_optimized.csv' table='[normalized_scores_optimized#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Unnamed: 0' ordinal='1' />
              <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
              <column datatype='string' name='streetname' ordinal='3' />
              <column datatype='integer' name='startstreet' ordinal='4' />
              <column datatype='integer' name='endstreet' ordinal='5' />
              <column datatype='real' name='segment_score' ordinal='6' />
              <column datatype='real' name='yelp_score' ordinal='7' />
              <column datatype='string' name='road_ids' ordinal='8' />
              <column datatype='string' name='address_nos' ordinal='9' />
              <column datatype='string' name='yelp_ids' ordinal='10' />
              <column datatype='string' name='yelp_address_nos' ordinal='11' />
              <column datatype='integer' name='accident_count' ordinal='12' />
              <column datatype='integer' name='business_count' ordinal='13' />
              <column datatype='real' name='ambulancer' ordinal='14' />
              <column datatype='real' name='bikedir' ordinal='15' />
              <column datatype='real' name='bikeinjury' ordinal='16' />
              <column datatype='real' name='bikepos' ordinal='17' />
              <column datatype='real' name='crashgrp' ordinal='18' />
              <column datatype='real' name='crashloc' ordinal='19' />
              <column datatype='real' name='crashtype' ordinal='20' />
              <column datatype='real' name='development' ordinal='21' />
              <column datatype='real' name='drvrinjury' ordinal='22' />
              <column datatype='real' name='norm_score' ordinal='23' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[F1 (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[F1]' />
          <map key='[F1]' value='[calc_segmentscore_optimized.csv].[F1]' />
          <map key='[Unnamed: 0 (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[Unnamed: 0]' />
          <map key='[Unnamed: 0.1]' value='[normalized_scores_optimized.csv].[Unnamed: 0.1]' />
          <map key='[Unnamed: 0]' value='[calc_segmentscore_optimized.csv].[Unnamed: 0]' />
          <map key='[accident_count (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[accident_count]' />
          <map key='[accident_count]' value='[calc_segmentscore_optimized.csv].[accident_count]' />
          <map key='[address_nos (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[address_nos]' />
          <map key='[address_nos]' value='[calc_segmentscore_optimized.csv].[address_nos]' />
          <map key='[ambulancer (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[ambulancer]' />
          <map key='[ambulancer]' value='[calc_segmentscore_optimized.csv].[ambulancer]' />
          <map key='[bikedir (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[bikedir]' />
          <map key='[bikedir]' value='[calc_segmentscore_optimized.csv].[bikedir]' />
          <map key='[bikeinjury (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[bikeinjury]' />
          <map key='[bikeinjury]' value='[calc_segmentscore_optimized.csv].[bikeinjury]' />
          <map key='[bikepos (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[bikepos]' />
          <map key='[bikepos]' value='[calc_segmentscore_optimized.csv].[bikepos]' />
          <map key='[business_count (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[business_count]' />
          <map key='[business_count]' value='[calc_segmentscore_optimized.csv].[business_count]' />
          <map key='[crashgrp (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[crashgrp]' />
          <map key='[crashgrp]' value='[calc_segmentscore_optimized.csv].[crashgrp]' />
          <map key='[crashloc (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[crashloc]' />
          <map key='[crashloc]' value='[calc_segmentscore_optimized.csv].[crashloc]' />
          <map key='[crashtype (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[crashtype]' />
          <map key='[crashtype]' value='[calc_segmentscore_optimized.csv].[crashtype]' />
          <map key='[development (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[development]' />
          <map key='[development]' value='[calc_segmentscore_optimized.csv].[development]' />
          <map key='[drvrinjury (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[drvrinjury]' />
          <map key='[drvrinjury]' value='[calc_segmentscore_optimized.csv].[drvrinjury]' />
          <map key='[endstreet (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[endstreet]' />
          <map key='[endstreet]' value='[calc_segmentscore_optimized.csv].[endstreet]' />
          <map key='[norm_score]' value='[normalized_scores_optimized.csv].[norm_score]' />
          <map key='[road_ids (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[road_ids]' />
          <map key='[road_ids]' value='[calc_segmentscore_optimized.csv].[road_ids]' />
          <map key='[segment_score (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[segment_score]' />
          <map key='[segment_score]' value='[calc_segmentscore_optimized.csv].[segment_score]' />
          <map key='[startstreet (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[startstreet]' />
          <map key='[startstreet]' value='[calc_segmentscore_optimized.csv].[startstreet]' />
          <map key='[streetname (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[streetname]' />
          <map key='[streetname]' value='[calc_segmentscore_optimized.csv].[streetname]' />
          <map key='[yelp_address_nos (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[yelp_address_nos]' />
          <map key='[yelp_address_nos]' value='[calc_segmentscore_optimized.csv].[yelp_address_nos]' />
          <map key='[yelp_ids (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[yelp_ids]' />
          <map key='[yelp_ids]' value='[calc_segmentscore_optimized.csv].[yelp_ids]' />
          <map key='[yelp_score (normalized_scores_optimized.csv)]' value='[normalized_scores_optimized.csv].[yelp_score]' />
          <map key='[yelp_score]' value='[calc_segmentscore_optimized.csv].[yelp_score]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>streetname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[streetname]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>streetname</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>startstreet</remote-name>
            <remote-type>20</remote-type>
            <local-name>[startstreet]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>startstreet</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>endstreet</remote-name>
            <remote-type>20</remote-type>
            <local-name>[endstreet]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>endstreet</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segment_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[segment_score]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>segment_score</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yelp_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[yelp_score]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>yelp_score</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>road_ids</remote-name>
            <remote-type>129</remote-type>
            <local-name>[road_ids]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>road_ids</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address_nos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address_nos]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>address_nos</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yelp_ids</remote-name>
            <remote-type>129</remote-type>
            <local-name>[yelp_ids]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>yelp_ids</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yelp_address_nos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[yelp_address_nos]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>yelp_address_nos</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>accident_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[accident_count]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>accident_count</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[business_count]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>business_count</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ambulancer</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ambulancer]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>ambulancer</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikedir</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bikedir]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>bikedir</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeinjury</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bikeinjury]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>bikeinjury</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikepos</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bikepos]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>bikepos</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crashgrp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[crashgrp]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>crashgrp</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crashloc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[crashloc]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>crashloc</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crashtype</remote-name>
            <remote-type>5</remote-type>
            <local-name>[crashtype]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>crashtype</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>development</remote-name>
            <remote-type>5</remote-type>
            <local-name>[development]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>development</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>drvrinjury</remote-name>
            <remote-type>5</remote-type>
            <local-name>[drvrinjury]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>drvrinjury</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0 (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0.1]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>Unnamed: 0.1</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>streetname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[streetname (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>streetname</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>startstreet</remote-name>
            <remote-type>20</remote-type>
            <local-name>[startstreet (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>startstreet</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>endstreet</remote-name>
            <remote-type>20</remote-type>
            <local-name>[endstreet (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>endstreet</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segment_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[segment_score (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>segment_score</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yelp_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[yelp_score (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>yelp_score</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>road_ids</remote-name>
            <remote-type>129</remote-type>
            <local-name>[road_ids (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>road_ids</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address_nos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address_nos (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>address_nos</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yelp_ids</remote-name>
            <remote-type>129</remote-type>
            <local-name>[yelp_ids (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>yelp_ids</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yelp_address_nos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[yelp_address_nos (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>yelp_address_nos</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>accident_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[accident_count (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>accident_count</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[business_count (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>business_count</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ambulancer</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ambulancer (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>ambulancer</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikedir</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bikedir (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>bikedir</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeinjury</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bikeinjury (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>bikeinjury</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikepos</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bikepos (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>bikepos</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crashgrp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[crashgrp (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>crashgrp</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crashloc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[crashloc (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>crashloc</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crashtype</remote-name>
            <remote-type>5</remote-type>
            <local-name>[crashtype (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>crashtype</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>development</remote-name>
            <remote-type>5</remote-type>
            <local-name>[development (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>development</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>drvrinjury</remote-name>
            <remote-type>5</remote-type>
            <local-name>[drvrinjury (normalized_scores_optimized.csv)]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>drvrinjury</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>norm_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[norm_score]</local-name>
            <parent-name>[normalized_scores_optimized.csv]</parent-name>
            <remote-alias>norm_score</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Accidents &amp; Businesses Count' datatype='integer' name='[Calculation_1036109426367406080]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([accident_count])+sum([business_count])' />
      </column>
      <column caption='F1 (normalized scores optimized.csv)' datatype='integer' name='[F1 (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Road Section ID' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Unnamed: 0 (normalized scores optimized.csv)' datatype='integer' name='[Unnamed: 0 (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Unnamed: 0]' role='measure' type='quantitative' />
      <column caption='Accident Count (Normalized Scores Optimized.Csv)' datatype='integer' name='[accident_count (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column caption='Accident Count' datatype='integer' name='[accident_count]' role='measure' type='quantitative' />
      <column caption='Address Nos (Normalized Scores Optimized.Csv)' datatype='string' name='[address_nos (normalized_scores_optimized.csv)]' role='dimension' type='nominal' />
      <column caption='Address Nos' datatype='string' name='[address_nos]' role='dimension' type='nominal' />
      <column caption='Ambulancer (Normalized Scores Optimized.Csv)' datatype='real' name='[ambulancer (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column caption='Ambulancer' datatype='real' name='[ambulancer]' role='measure' type='quantitative' />
      <column caption='Bikedir (Normalized Scores Optimized.Csv)' datatype='real' name='[bikedir (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column caption='Bikedir' datatype='real' name='[bikedir]' role='measure' type='quantitative' />
      <column caption='Bikeinjury (Normalized Scores Optimized.Csv)' datatype='real' name='[bikeinjury (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column caption='Bikeinjury' datatype='real' name='[bikeinjury]' role='measure' type='quantitative' />
      <column caption='Bikepos (Normalized Scores Optimized.Csv)' datatype='real' name='[bikepos (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column caption='Bikepos' datatype='real' name='[bikepos]' role='measure' type='quantitative' />
      <column caption='Business Count (Normalized Scores Optimized.Csv)' datatype='integer' name='[business_count (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column caption='Business Count' datatype='integer' name='[business_count]' role='measure' type='quantitative' />
      <column caption='Crashgrp (Normalized Scores Optimized.Csv)' datatype='real' name='[crashgrp (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column caption='Crashgrp' datatype='real' name='[crashgrp]' role='measure' type='quantitative' />
      <column caption='Crashloc (Normalized Scores Optimized.Csv)' datatype='real' name='[crashloc (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column caption='Crashloc' datatype='real' name='[crashloc]' role='measure' type='quantitative' />
      <column caption='Crashtype (Normalized Scores Optimized.Csv)' datatype='real' name='[crashtype (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column caption='Crashtype' datatype='real' name='[crashtype]' role='measure' type='quantitative' />
      <column caption='Development (Normalized Scores Optimized.Csv)' datatype='real' name='[development (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column caption='Development' datatype='real' name='[development]' role='measure' type='quantitative' />
      <column caption='Drvrinjury (Normalized Scores Optimized.Csv)' datatype='real' name='[drvrinjury (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column caption='Drvrinjury' datatype='real' name='[drvrinjury]' role='measure' type='quantitative' />
      <column caption='Endstreet (Normalized Scores Optimized.Csv)' datatype='integer' name='[endstreet (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column caption='Endstreet' datatype='integer' name='[endstreet]' role='measure' type='quantitative' />
      <column caption='Normalized Score' datatype='real' name='[norm_score]' role='measure' type='quantitative' />
      <column caption='Road Ids (Normalized Scores Optimized.Csv)' datatype='string' name='[road_ids (normalized_scores_optimized.csv)]' role='dimension' type='nominal' />
      <column caption='Road Ids' datatype='string' name='[road_ids]' role='dimension' type='nominal' />
      <column caption='Segment Score (Normalized Scores Optimized.Csv)' datatype='real' name='[segment_score (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column caption='Non Normalized Score' datatype='real' name='[segment_score]' role='measure' type='quantitative' />
      <column caption='Startstreet (Normalized Scores Optimized.Csv)' datatype='integer' name='[startstreet (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column caption='Startstreet' datatype='integer' name='[startstreet]' role='measure' type='quantitative' />
      <column caption='Streetname (Normalized Scores Optimized.Csv)' datatype='string' name='[streetname (normalized_scores_optimized.csv)]' role='dimension' type='nominal' />
      <column caption='Streetname' datatype='string' name='[streetname]' role='dimension' type='nominal' />
      <column caption='Yelp Address Nos (Normalized Scores Optimized.Csv)' datatype='string' name='[yelp_address_nos (normalized_scores_optimized.csv)]' role='dimension' type='nominal' />
      <column caption='Yelp Address Nos' datatype='string' name='[yelp_address_nos]' role='dimension' type='nominal' />
      <column caption='Yelp Ids (Normalized Scores Optimized.Csv)' datatype='string' name='[yelp_ids (normalized_scores_optimized.csv)]' role='dimension' type='nominal' />
      <column caption='Yelp Ids' datatype='string' name='[yelp_ids]' role='dimension' type='nominal' />
      <column caption='Yelp Score (Normalized Scores Optimized.Csv)' datatype='real' name='[yelp_score (normalized_scores_optimized.csv)]' role='measure' type='quantitative' />
      <column caption='Yelp Score' datatype='real' name='[yelp_score]' role='measure' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[accident_count]' derivation='Sum' name='[sum:accident_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ambulancer]' derivation='Sum' name='[sum:ambulancer:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bikedir]' derivation='Sum' name='[sum:bikedir:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bikeinjury]' derivation='Sum' name='[sum:bikeinjury:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bikepos]' derivation='Sum' name='[sum:bikepos:qk]' pivot='key' type='quantitative' />
      <column-instance column='[business_count]' derivation='Sum' name='[sum:business_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[crashgrp]' derivation='Sum' name='[sum:crashgrp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[crashloc]' derivation='Sum' name='[sum:crashloc:qk]' pivot='key' type='quantitative' />
      <column-instance column='[crashtype]' derivation='Sum' name='[sum:crashtype:qk]' pivot='key' type='quantitative' />
      <column-instance column='[development]' derivation='Sum' name='[sum:development:qk]' pivot='key' type='quantitative' />
      <column-instance column='[drvrinjury]' derivation='Sum' name='[sum:drvrinjury:qk]' pivot='key' type='quantitative' />
      <column-instance column='[endstreet]' derivation='Sum' name='[sum:endstreet:qk]' pivot='key' type='quantitative' />
      <column-instance column='[norm_score]' derivation='Sum' name='[sum:norm_score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[segment_score (normalized_scores_optimized.csv)]' derivation='Sum' name='[sum:segment_score (normalized_scores_optimized.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[segment_score]' derivation='Sum' name='[sum:segment_score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[startstreet]' derivation='Sum' name='[sum:startstreet:qk]' pivot='key' type='quantitative' />
      <column-instance column='[yelp_score]' derivation='Sum' name='[sum:yelp_score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1036109426367406080]' derivation='User' name='[usr:Calculation_1036109426367406080:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.370277' measure-ordering='alphabetic' measure-percentage='0.629723' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:crashloc:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:bikedir:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:segment_score (normalized_scores_optimized.csv):qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:drvrinjury:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:crashtype:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:bikeinjury:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:accident_count:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:yelp_score:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:bikepos:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:endstreet:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[usr:Calculation_1036109426367406080:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:norm_score:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:segment_score:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:crashgrp:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:startstreet:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:business_count:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:development:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:ambulancer:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Score Estimates with Non Normalized Scores</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='calc_segmentscore_optimized' name='federated.0efyb7n0fj9el916uhsc9030j453' />
          </datasources>
          <datasource-dependencies datasource='federated.0efyb7n0fj9el916uhsc9030j453'>
            <column caption='Accidents &amp; Businesses Count' datatype='integer' name='[Calculation_1036109426367406080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([accident_count])+sum([business_count])' />
            </column>
            <column aggregation='Sum' caption='Road Section ID' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
            <column caption='Accident Count' datatype='integer' name='[accident_count]' role='measure' type='quantitative' />
            <column caption='Business Count' datatype='integer' name='[business_count]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:ok]' pivot='key' type='ordinal' />
            <column caption='Normalized Score' datatype='real' name='[norm_score]' role='measure' type='quantitative' />
            <column caption='Non Normalized Score' datatype='real' name='[segment_score]' role='measure' type='quantitative' />
            <column-instance column='[accident_count]' derivation='Sum' name='[sum:accident_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[norm_score]' derivation='Sum' name='[sum:norm_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[segment_score]' derivation='Sum' name='[sum:segment_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1036109426367406080]' derivation='User' name='[usr:Calculation_1036109426367406080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:accident_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[usr:Calculation_1036109426367406080:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:accident_count:qk]&quot;</bucket>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:segment_score:qk]&quot;</bucket>
              <bucket>&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[usr:Calculation_1036109426367406080:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.0efyb7n0fj9el916uhsc9030j453].[none:F1:ok]' direction='DESC' using='[federated.0efyb7n0fj9el916uhsc9030j453].[sum:segment_score:qk]' />
          <filter class='quantitative' column='[federated.0efyb7n0fj9el916uhsc9030j453].[sum:segment_score:qk]' included-values='in-range'>
            <min>40.0</min>
          </filter>
          <slices>
            <column>[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]</column>
            <column>[federated.0efyb7n0fj9el916uhsc9030j453].[sum:segment_score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0efyb7n0fj9el916uhsc9030j453].[sum:segment_score:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0efyb7n0fj9el916uhsc9030j453].[Multiple Values]' scope='rows' value='Count' />
            <format attr='width' field='[federated.0efyb7n0fj9el916uhsc9030j453].[Multiple Values]' value='51' />
            <format attr='width' field='[federated.0efyb7n0fj9el916uhsc9030j453].[sum:segment_score:qk]' value='51' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]' field-type='nominal' max-size='1' min-size='0.2' type='catsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-size' value='15' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6203289031982422' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0efyb7n0fj9el916uhsc9030j453].[Multiple Values]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]' />
              <lod column='[federated.0efyb7n0fj9el916uhsc9030j453].[sum:norm_score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6203289031982422' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0efyb7n0fj9el916uhsc9030j453].[sum:segment_score:qk]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6203289031982422' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0efyb7n0fj9el916uhsc9030j453].[Multiple Values] + [federated.0efyb7n0fj9el916uhsc9030j453].[sum:segment_score:qk])</rows>
        <cols>[federated.0efyb7n0fj9el916uhsc9030j453].[none:F1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Score Estimates with Normalized Scores</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='calc_segmentscore_optimized' name='federated.0efyb7n0fj9el916uhsc9030j453' />
          </datasources>
          <datasource-dependencies datasource='federated.0efyb7n0fj9el916uhsc9030j453'>
            <column caption='Accidents &amp; Businesses Count' datatype='integer' name='[Calculation_1036109426367406080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([accident_count])+sum([business_count])' />
            </column>
            <column aggregation='Sum' caption='Road Section ID' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
            <column caption='Accident Count' datatype='integer' name='[accident_count]' role='measure' type='quantitative' />
            <column caption='Business Count' datatype='integer' name='[business_count]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:ok]' pivot='key' type='ordinal' />
            <column caption='Normalized Score' datatype='real' name='[norm_score]' role='measure' type='quantitative' />
            <column caption='Non Normalized Score' datatype='real' name='[segment_score]' role='measure' type='quantitative' />
            <column-instance column='[accident_count]' derivation='Sum' name='[sum:accident_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[norm_score]' derivation='Sum' name='[sum:norm_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[segment_score]' derivation='Sum' name='[sum:segment_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1036109426367406080]' derivation='User' name='[usr:Calculation_1036109426367406080:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[sum:accident_count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0efyb7n0fj9el916uhsc9030j453].[usr:Calculation_1036109426367406080:qk]&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0efyb7n0fj9el916uhsc9030j453].[none:F1:ok]' direction='DESC' using='[federated.0efyb7n0fj9el916uhsc9030j453].[sum:segment_score:qk]' />
          <filter class='quantitative' column='[federated.0efyb7n0fj9el916uhsc9030j453].[sum:norm_score:qk]' included-values='in-range'>
            <min>4.0</min>
          </filter>
          <slices>
            <column>[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]</column>
            <column>[federated.0efyb7n0fj9el916uhsc9030j453].[sum:norm_score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0efyb7n0fj9el916uhsc9030j453].[sum:norm_score:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0efyb7n0fj9el916uhsc9030j453].[Multiple Values]' scope='rows' value='Count' />
            <format attr='width' field='[federated.0efyb7n0fj9el916uhsc9030j453].[Multiple Values]' value='40' />
            <format attr='width' field='[federated.0efyb7n0fj9el916uhsc9030j453].[sum:norm_score:qk]' value='40' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]' field-type='nominal' max-size='1' min-size='0.2' type='catsize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]' />
              <lod column='[federated.0efyb7n0fj9el916uhsc9030j453].[sum:norm_score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6203289031982422' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0efyb7n0fj9el916uhsc9030j453].[Multiple Values]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]' />
              <lod column='[federated.0efyb7n0fj9el916uhsc9030j453].[sum:norm_score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6203289031982422' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0efyb7n0fj9el916uhsc9030j453].[sum:norm_score:qk]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]' />
              <lod column='[federated.0efyb7n0fj9el916uhsc9030j453].[sum:norm_score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6203289031982422' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0efyb7n0fj9el916uhsc9030j453].[Multiple Values] + [federated.0efyb7n0fj9el916uhsc9030j453].[sum:norm_score:qk])</rows>
        <cols>[federated.0efyb7n0fj9el916uhsc9030j453].[none:F1:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='20750' id='1' param='vert' type='layout-flow' w='49900' x='28800' y='78250'>
                <zone h='5875' id='8' leg-item-layout='horz' name='Sheet 1' pane-specification-id='6' param='[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]' type='color' w='49900' x='28800' y='78250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='77250' id='3' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='77250' id='4' name='Sheet 1' w='98400' x='800' y='1000'>
                  <layout-cache cell-count-w='72' minheight='204' non-cell-size-w='103' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='20750' id='9' param='vert' type='layout-flow' w='28000' x='800' y='78250' />
              <zone h='20750' id='10' param='vert' type='layout-flow' w='20500' x='78700' y='78250' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='measures' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='6' param='[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]</field>
            <field>[federated.0efyb7n0fj9el916uhsc9030j453].[none:F1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C6EE0EFF-F2C4-4478-8B1B-36D569FA711F}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='7' param='[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]</field>
            <field>[federated.0efyb7n0fj9el916uhsc9030j453].[none:F1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE6D5D12-A08C-4F71-978B-AB6BADF483F3}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{484AAF0E-81DF-4A04-950C-BE6B3B88BE2E}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0efyb7n0fj9el916uhsc9030j453].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{12FEEF9E-2C15-4307-B18F-F944FED706E1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='576' name='Dashboard 1' width='576'>
      iVBORw0KGgoAAAANSUhEUgAAAkAAAAJACAYAAABlmtk2AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXwU9f0/8NfM7J37IgeEBAgEUE65Eay1isgpivdJq3gf1R5WrdpvrT9t
      rUdtq7We9VaqFbxPFEVOBYQcEJIAubNJNtnsPfP5/ZGwSSD3tZvd1/Px8OHszGc/894l2X3l
      M/OZkYQQAkRERERhRA50AURERESDjQGIiIiIwg4DEBEREYUdBiAiIiIKOwxAREREFHYYgIiI
      iCjsMAARERFR2GEAIiIiorDDAERERERhhwGIiIiIwg4DEBEREYUdBiAiIiIKOwxAREREFHYY
      gIiIiCjsMAARERFR2GEAIiIiorDDAERERERhhwGIBoyn0YacA0WBLiOs7N21C75B3mf5kSKU
      W22DvFcior6RhBCiu41/3PY13t7wIY6UVyM6fhhmzpqDxWeejiizYSBr7LH1rz6NDV9uP259
      YuYk3H/HDX3qO2/nRvx7/Xb8+Z7b+tTP0OXBnTfdiAtuewCTMuI7bVm+7xv85l+f4YVHf9/t
      3u/71Vo4oyfgT3ffckw6t+NXNz2A+x+/HwP302bHr9behugJM3H3Lb84ZlM5bnrgOTx+/x0D
      tvf+cP6iRXjqo48Q2/x43QtPwB45Dpefc8aA7fM/j/8BGHMaLl0yv93tQ+Vzg4jCi667DTe+
      +wIeeelzXHHZRVickgBrRQm+3vgR9hSU4v9uv2oga+yxssOFyJw0F2fMndRmvcES0+0+Hvrd
      Wpx0zh047aTMNuujYpMweeK4/iizC3VYtGgtPvro9UHYV0/IOHHqSYixtHx57fhsHdbtsOJP
      v766z73v270fSVkuvP/NPiydP7HVFh92f/8jtD7voTM+7N5fhizXx/hm3yLMn5jeapML3/+Y
      O6B7HwgjMrPgMiUHbP9D6XODiMJLtwPQi8+/jAf+vg4TUqOa18zAoiUr4HA0DlBpfTNi1Fic
      dNJJ/d5v2uiJuHT0xK4bhiwdLlzT96DTMT1uvPVG3HHP33DG3H/CMNgHafVm3HrjL3DP3/6J
      uf/805A/Rjz7lDMDuv+h9rlBROGj25/vPtULn3r8398WS0Sbx/t2bMI9d/4a11xzLf7fw39D
      UVlN8xaBT97+D85ZfhZmzJiJlasvxvtftT1M9cQDd6K4xoPGugo8/uf7cfNdD/i3bf/qfVx0
      7grMmDETZ593KTZu39eDl3m83Zs/xcWrV2LmzBlYeOrPcPvv7kVlgweemmKsXbsWX2zLw1MP
      34O1a9di7dq12LgzDwBQU7wHDzzxgr8fT00xfvfHv+Ld15/HBauWY+bMmbjwyutQcOgI/vX4
      g1i66DTMnDUHt9z5AFy+lqON77z0JC4+fxVmzZqJOXNPxvW/vBMl1gYAwOaP12Ht2ttgs5X4
      97927a9gb36u216Dh+79LRbOn4t5C07B3X96DI0e1d/3kf27ce2aizF71kzMnb8Qa2+6HXmH
      Ko97Dw788DUefabtCNOn7/wH1956NzytDoyW5e/AX5582f/44ft+hfLmYp544E48/NTL2PbF
      en+tDz/9qr+t0Lz46H+v4cqLz8OsmTNx5rJzsHFH5yMpyVkzcMpYA978cHOn7eoqDuGu22/E
      /LlzMG/BT/Db+/6MGrvLvz1v50Y8+cLrWPfyM7jo3JWYOWMGVpx3KXYdKO2036wZP8NYQwk+
      3JzTabvSgr249bo1mDN7Jhb+9HT86ZGn4Gj177Bz43q8un4jIDR88s4ruOmG67EzrxyAHb+6
      /R58+f46XHnRasycORMrVl+KPfuL8Npz/8Cq5Wdh5syZuPK6X6Om0ePvb+P7b+DKSy/E3Nmz
      MGv2XFx5zc3ILa7otMaN61/F+o07/Y8fuPOmVj9TTf+1/nmuOpyP2264CnNmzcSppy/GP/7z
      NtoeIxf44M3ncO7KpZgxYwYWLzsbGzYef7j5qL5/bgAb33sdq1cuxYwZM7H8nAvwzqdtfy56
      /7mh4fV/P4azzvgpZsyYibOWn42/tvrZJaIQJ7ppw38eF4uWrRZvvfuRsDW62m3z3cdviEVL
      zhavv71BbNu6Rbz0zD/E/z7fIoQQ4tv3XxYrz18j9uQXC1VTRc7334pzli0WX+7c73/+zZct
      F1v3FojLLzhHPPLk82L7rr1CCCEKd38tFi87R2zZnS9UVRU/bv1SLDnzLHGg3NZuHU89eId4
      ccOmjl+MxyZWnrVEfPN9rlBVTTTUVon3/vuKOFDeIFS3XWzfvl3ctvZC8a+XN4jt27eL7du3
      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
      tvN/IzC0Cx7el/7rsY5XcJlQpC3oDJCIiIgYjm6CFhEREcNRAImIiIjhKIBERETEcBRAIiIi
      YjgKIBERETEcBZCIiIgYjgJIREREDEcBJCIiIoajABIRERHDUQCJiIiI4SiARERExHAUQCIi
      ImI4CiARERExHAWQiIiIGI4CSERERAxHASQiIiKGowASERERw1EAiYiIiOEogERERMRwFEAi
      IiJiOAogERERMRwFkIiIiBiOAkhEREQMRwEkIiIihqMAEhEREcNRAImIiIjhKIBERETEcBRA
      IiIiYjgKIBERETEcBZCIiIgYjgJIREREDEcBJCIiIoajABIRERHDUQCJiIiI4SiARERExHAU
      QCIiImI4CiARERExHAWQiIiIGI4CSERERAxHASQiIiKGowASERERw1EAiYiIiOEogERERMRw
      FEAiIiJiOAogERERMRwFkIiIiBiOAkhEREQMRwEkIiIihqMAEhEREcNRAImIiIjhKIBERETE
      cBRAIiIiYjgKIBERETEcBZCIiIgYjgJIREREDEcBJCIiIoajABIRERHDUQCJiIiI4SiARERE
      xHAUQCIiImI4CiARERExHAWQiIiIGI4CSERERAxHASQiIiKGowASERERw1EAiYiIiOEogERE
      RMRwFEAiIiJiOAogERERMRwFkIiIiBiOAkhEREQMRwEkIiIihqMAEhEREcNRAImIiIjhKIBE
      RETEcP4fQm6Di9t9zE0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d4wcWX7n+YmI9JWmKsuTLMMqkkU/dN1Nsn1P++kxGmmkmdXcLmZ3cauV
      tLvCae8OhwMOg8PhbnEL7R2wC0m3WgECNDuanVFLo/HdTdPNpml6Fossw/LeV6U3ERnx7o+s
      SsMqNskyZHH4PgDBqMwXv/ciMr7x7O/9FCGEQCJ5SlEfdwEkkseJbfFACIGu64+zLBLJI2dd
      BBCJRPD7/WtiSyJZT3ICUFUVn8+3JkZ1XV8zWxLJeiL7AJKnGikAyVONFIDkqeahBRCZGebM
      hVYEEJ8b58yZs3xy5jxJU04nSJ48HloAHm8Z83MTAIz0dOCsaqTKlWYuZq554SSS9cZ2/yR3
      o6Ao2aPmfYf40d/8DWrNXr7xjA3LshBCYFkWpvn5gkjEoliWhc1mx+XxrKDoEsnqWYEA8vR3
      dfDsO7/DdNvHtI+E2bNlYezfNJn7//4zrv37KTl+bNlz265cIh6LUllTy/5njq6mGBLJinlo
      AYwNdjDYP0gokcHv93H11g08mp+tATeKoqAoCpgmekcnqs2G74Xnlze0UIsoioKqyr645PHw
      0AKobznCv2o5kv2jaS/vNi1No2gaqsuFFY+vtnwSybqyPq9eVUVxOhHJJHKxqWQjsy4CUDQN
      1e3CSqfBstYjC4lkTVi3xrfidCGSKZA1gGQDs24CUD1uRCqFkDWAZAOzfjWAx4OVSskmkGRD
      s6p5gM9DdXuwkkmSsRhGIo6iKATKguuVnUSyItZNAIrLCYbBwJ1OxqYnsdntvPruV9YrO4lk
      RaxbE0hb8AgTycR6ZSGRrJp1HAVyAmAlkuuVhUSyatZvFMhbAoAVi61XFhLJqln3GkCk0+uV
      hUSyatavD+D1AmAlZB9AsnF5aAGEZ4b5+Px1BIAQzIz28tGJU4zPFTd1cn0AuSBOsoF5aAGU
      eMsIz08BEJ7s4cSlHl5+9VVqg95iwws1gGpk1qCYEsn6sCqPsBsXL+Iva+LHP/hrDn3xazRV
      eRFCkEomCVsmaBqaYWQTC8hk8mJYXCIkhCj6XCJ5lKxqIsxUHOzcvQ9vDVwfmqS5OrsZ1sTo
      MHNjI2zTVJTFGkChyPFFKTiSDjGSx8UKPMI6GRoYJpTIcOTos5y5ch6PQ+PwscacR5gCoCiY
      dnu+BqBYAHmPMKQAJI+NFXiEHeYPWw5n//A08t67jfdMa9ntqAUCkEg2Guv66hU2TQpAsqFZ
      VwGYTidqxpRLoiUblvUTgKJg2TSUTAZFCkCyQVnXGsCy21EtC8WSbpGSjcn6NoHsdhTTlDWA
      ZMOybg4xAJbDgWLevw8wPzuDEAKX242nxPu5aSWStWR9BWDTUDMmqmXxeY2gaxfOYpkm9c3b
      adm7fz2LJJEUse59AEWIbC0gkWxA1rcP4HAgQM4FSDYs6zsRpmkAaLoUgGRjsu6jQCiKrAEk
      G5Z1rgFUhKKgZGQfQLIxWYFH2BCnzl7Ljepk0lF+/sGpZdNaCzWAJv2CJRuUFXiEBYmGp7N/
      iAzdd+4QCi2/84Nlt2UFIB1eJBuUVXmEjQ30UdGwDU93NmjeYoywxdrBstkQCtkm0D08wiwh
      WDxBWJb0DpM8UlY1ETYy1MdMRxe9fT10DBxmZ0N1cYKFQBmanr6nR5iCIsMlSR4bK/IIGxka
      IZTI8OzLbwM6iuJmV2MNQN4jbAHV48k5xt/LIyz/mRSA5NGyIo+w31/0CAPAwTvvvH7P9KrL
      jZqW2yNKNibr/rpVPO4iv2CJZCOx7gJQnU5U3ZChkiQbkvUXgN+HYgnpEyDZkKx/j9PhRLEs
      VLkiVLIBWXcBWHY7WBaKKWsAycZjXR1iIDsbrFgWimkSCYUw9DSabd2zlUgeiHV/Ek2HIyeA
      3s7bzExO4AsE1jtbieSBWP8mkC1bA6hyiYNkA/JI+gAKZDfIkkg2GOsvAIcdAWi6vt5ZSSQP
      zboLQKgqKIp0jJdsSB5JH0BoGlpa1gCSjceKPMJOnrmCAMJTQ/zyZ//A+z8/TeYeKx0sm4ZQ
      VbSU9AqTbDxW5BEWj84CkFHcvPWlrxBIDTN5j1h4psuJ6bDjiEZXVVCJZD1YkUfY4lr+8spK
      LDONs3o7Nd6lHmEAFqD7vLgjUeILC+KEkB5hko3BqibChJVheGCIfQcPoUF2B4giD5esg4zh
      9eIbHYeFh1tRpEeYZGOwIo+wsZExQokM47fP0jYwh89zhz3PvExDVXZjW+Wuc3S/FwYMzNm5
      wic/+5/0CJM8RlbkEfZ7Cx5hZc+8wu5n7n+OUVKCyGTIzM5ARflDF1IiWS8eyetW92XjB2uh
      8KPITiJ5YB6JACyHA9PlxB67x1CRRPKYeDQCsNswnQ4c0Zh0jZRsKB6JAISmYXhKsgKQSDYQ
      j2zIxfB6sMUTjyo7ieSBeGSuWbrPh5bJYEskobR0xXamxseYHB0GYPfBI2gLMQgkkpXwyGoA
      3Z+dI1htMygejTIxOsLE6AhC9ickq+TRNYF8WQHYZT9AsoF4ZAIwXS4UtxtHTApAsnF4ZAJQ
      bDZsFeWyBpBsKJYKQAiM+CSfXetG13Ume65zZ3L1ozeK3Y5WWYk9npB7BEk2DMuMAgluXznP
      T062c+taNQJ446st+W8tk1gihddbgiIEoblpcHgp9Xnum5nu82JPJLPukTY5eiN5/CytARSV
      Ay9/hX/+rS+zrbmZhmovQ+Pzua8jM8P86uQFACb727jSMcSVMyeYit1/B2jd50PV9Vy8AInk
      cbN8HyAT5oOPLuIp8eL1uLCs/HBjib8Spz3r4N564xbbd+5iV32A6+2D983M8GZrCUdEeodJ
      NgbLT4SpJVSV2pgNzWOGQ7iDy5+cNAzsmoqiKqT1NKZpIoQgMTfBTOcVACprspFjEJDy+3EB
      zvkQ0aoKgKy4Fr3DLBPjPrEELCu/u0TGMORcgGTFTIwM3UMAio3mXbvwllWQnlEJufLJBCaG
      YYIQ7GjYwvjMPNb4PDv2HMzNymaScRKz41lTOc8XsDxuMiUe3LNzOUcYVc17hKmqht1u/9xC
      q2q+72Cz27HJfUYlKyQWidxDAJkordda0VWV+YkR3vzO0dxXk6ND+D1OQkmTliPP0952G7Xh
      IDtqfA+UabKiHPfMLELuEiHZANyjBrBz/I33aNhSyVzfdaYK3Ny3NO9lS/Pe3Ol7Dx5e1sS9
      SJYHydxow5yZgYB/peWWSNaE5QVgpfnF+9/H5feTikd545t71izDVHkZQgicc/OkpQAkj5nl
      BaC5eeboUZxePw67g2013jXLMF0aION24Z6eJbK1Yc3sSiQrYflhUCtJ78AMzc1NVDtCXGyf
      WrMMhc1GqjxIyfiE3C9U8thZXgCah4AjxY1rV/n7n50hUHb/Wd6HIRksQ0vr0kFG8thZIgDL
      NAjHDF5763VsCJ555xvs37x2TSCAVHUVqmXhDEfu+kZgmmZ2PkFGlZQ8ApYIINx3lRPXB/AE
      KnjhlVepFvOMxtZ26YJSHkT1+/FMThd9rqfTnPrZjzn1sx8zPNC3pnlKJMuxRAD9w0lePrYb
      dWGmqqqmhM7O8TXNVPP7obQU98zsmtqVSB6WJQLYVG3j3GftGKaFldE5d/os/sqV+/AuiwLJ
      qgockSiK3AxX8hhZMgxas/sYtv/6F/wPP/xzLKGw9/kv8d/XP9gs78OQrKzAYZq4Z+YeoVuO
      RFLM0nkAxcaXvv0vefubBhYq9nVat5+sLMfncFAyPAL1m9YlD4nkftzz3avZ7Ov28AOYTgfx
      2mqs6zdAhk+SPCZW1fjQ4yGuXLrI5eu3MFYwahlprMOKxSkZW9tOtkTyoKxKAH23r6GWN+BN
      TzAWefjObKKqEsPtxjc0IvcMlTwWVrWYfuvOvfzgB+9TseMZ3gnY7uGccu8HW9hsRBu2EOgb
      wJZMLTlN5EIqCayFibGiAExCSIeY1SAE5sJ9VVV1SXSfX0eEsAo8HMXqBDA5PsrRt75K76VT
      9E7tornSnY0TVpThYgAwENbSGGH6tma0rh5KxicQ27bnzrMK4oVNjY/Sfv0qANWbtuTSZEzz
      c+QluR/JeIyLn5wCYNcXDlG9ect9znjyGe7robezHcg+S6uLEWbojMyMUl5VjU1TUdXsv+Ko
      RwutLAUUVVn4LB8aybF9G6b/AoGefowXX8ydp2pqzjuscP/PRRsANptNeoStAr3g3hXe719n
      CkNwKaqyOgHU73mGYDQCmhNfiXtFNhRFIby1nrLWWzj/8q+orggSq61B3bX3/idLJKtkVQJQ
      FBWff/WzxPMt28gAZaEIvqERAj39KIOjxN57F8+zz67avkRyLzZE+8Gy25nftQPnljqm+nop
      GZ+ksqcf80//nNhHJzC/9TuPu4iSX1M23CIEy+Eg2lCH/V//IeV/9K8xhkdI/ac/RdXlZJlk
      7dlwAsihKniee47yP/iX2KMxai9cRrnPnkESycOycQVAtoPsPnIE72//FiXjk1Rdu4liyYFP
      ydqxoQUAWRHohw4wu7uFQP8gys22x10kySqwLIuMYWyYXf02vAAWmduzk2RFEPeZsziWuFJK
      nhRGBvo5/YufcPoXP0FPP/7N0Z4YAQhNY/LZwyiqRvXlayB9hiVrwBMjAADd70O8/hrumTk2
      f/oZ8Q8+JN3VRWZ2DiG3WJGsgA0xD/AwJHZsw9i1A3//IOG/+QHhTAbVW4IWLMdWW4MtGEQr
      K0P1luBoakKrqEB1u1FkOFXJMjxxAhCqwswX9jK7dxfPHziCNTmFMTiIPjCA3t9P8uo1EBZY
      2RV3qs+HrbYWx9ZGHI2NuPbsRqusfCpWPkruzxMngEWEpmGvr8fW1ATH8rtXC8vCSiSwQiH0
      oWHSXV3oAwPEz5wh9sGHYLNR/ge/T0nBOZKnl1ULIB6apq29m4ad+6kNru0GWitBUVU0rxfN
      68W+ZQslx48hTBOh62Smp5n7i79k7s/+HCyLkuePP+7iSh4zq+oEJ0Jj/PLkBbbvPUhN2eN/
      +O+FommobjeO+noq/8c/xt7YwNxf/BeS12887qJJHjOrEkDbZ5+i+Uo5e/JXTEZSiGU8tISV
      wczoWBkDy1w8zrtP3msuxLJM0ok46UQcK7P8CI+ZyWDoOoah5/K++5+h6xi6jpnJIBb6BBV/
      9G+w1dQw+6d/Rqqj457nLmvPMDB0ncyCvQf9Z1lWviwLoaTW6t9qbOd/CFacv2HoD3xPCj0E
      1/IePPB9uOsZWlUTKJQwOfTyYZyT17nWMcjbz25fksl8fzujNz7D4fJgNDQz2tVGsraeqv0v
      LNz3fIywwh9kerifk//5/wJg7+tfL7ppi3TdamVydAS7w8ELb7yzbBk/+dXPEEJQ37SN5l0L
      cQ78foL/6g+Y/fd/wvS//xOC//aPce7Yvuz5d/PZxydIJRJUbdrMnoNHHugcgEQ8zsWPTwCw
      8wsHqd1S/8Dn3o94LMqlRc+uA4eo2Vz3QOdZBfGaLcvCXOFQ8rkTH2DoOpvqG2jZd+Dz87QK
      8zRXnOdyGHqasx/9CoBtu/dSt7V5SZrCPWeFWKVL5KFD+7l49QoBNcW+Q4dz3jbFHmH5GGGL
      2y0WeoSpSj5GWOHIjKqoS218zvH9PMMUVS1KY9u8mcr/5X9m+t/938z/P/8vwd/7F9jKy8Gm
      YauoQHW5lrezUFhVUR/KG81WMAyrqdqaerKt1LZWsO2Nqj3c9RSz+Lve30ZhjDdNW1uPPqtA
      TKq6fFmKPMKUVXqEVTbs4YuVcYRmx+NyrsbUY8FeXU3l//Rvmfo//x0zf/IfYMExXPG4KTl+
      HM+LL+BoaJBzCL/GrE5+ioK7ZON2fh8Ee20tNf/7d0l1doJpYaVSpFpbiX1yhuiHH+HcsYOS
      F57H/dyzqG53do5hAyzikqwNT+w8wFqilZVRcuxY7m/f618kMzND/NOzxD/9lLn/8peoP/wR
      tooKqiNhTEXBceQQ1r4DqE7HYyy5ZLVIAdwDW0UFgd/4Gv6vfIV0VyfxT89hzs5gpZIoySS2
      X3zAxI02Ar/xNZy7dqIFgyjqE7W0SoIUwH1RNBXX7t24du9GCMGdE78iGYtRnc5QdfMWs3/6
      Z6BpKA4HtqoqVKcTxelE9XjQykqzn5UGyLhcOOdDZDwr2z1Dsj5IATwE2VEnJdtZ3tZM1dd/
      E/1ON3p/H8bEJOb0NFZax4pEyExNYXUmEak0IpVCAA2qgmm3Izp6iBw5gmv/Puw1NShPwX48
      G5UnWgDCNDGNNJqqoKcSWKaJomoLWyZaqNo9wiAveCUB2Oz2oqGx5TAMA2FZRZtyAagOB669
      e3DtXRpHWZgmVjyOlUxiRWOk5mbpPPcprvkQTExg/Nfvo35fwV63Bc+RI7iPHMZWXY3icqEo
      ChnDwLIsFEXB7ljaz1ic5APWdCx90Z65MFlpdzg25MJBQ89Ofqqqim0VL5AnWgDzA7cZvXIW
      V4mPU5N9jN65RcWWreipJJGZCbbufwb8tUvOi8zPcfnsJwAcPPo8FdU1n5vPzUsXmJuZJlAW
      fOCyKZqG5vdnw0FVV2PGqomMDxMBtM11zLW1UTI+QVUsSfhv3yf8t++jlpbi2NqIrbqamblZ
      oukUNqeTrTt2gqZir6rG3lCPraICy7L45Fc/A6Bmy4NNfD0o40ODdNy8DsCLb76Ly73xmm1X
      zn5CLBqhsqaWA8+tfE3XEy2AJxWhQDpYSjpYStPzL+F3ukjdaCXd2Um6rw9jaAhnLIZTN1CE
      IHTpatH5Wmkptvo6Kow0RkkJ9pSBOxzCdDlRpKfcQyEFsAHQfD5KXnwBzwvPg2kiMhnar15m
      cnQYt9vDcy+/BpaFMTxCurcXY3gYY3iYwOQUmp5GuXKdOkCoKsaZC4wHg7j27MH72qvY6379
      N7xdDVIAGwhFUcBmQ7HZEE4nltOJ5XJlm1Fk3/yufdk9U01D55P3f4Sm61SWlhEaGcYeT1Lt
      dKHOzhM7eZLY6dN4jh7Fc+w5VI8nt/5EsdtBVTETCRzhCJbdzsZr5T8apACeVFQN0+3K/tu8
      ibjIdoS3HHqG6rp69MFBIj/9OfGzZ4l//PE9zWwFTLsdJZ7G/OY30bwlj6b8GwQpgF9THA0N
      VPzh75P5nW9gjI9DJpPbOEAYBpgW6VSK7vY23JPTqCdOMtF6E9/bb2HpKbwjIwibDf3WLfD5
      sNfWogUCj/mq1p5VC8DKpLl07RZHnz28FuWRrDG2ykpslZXLfxmLEkmEiTTUEfjia6gnThH6
      6+8BsJnsKvXQJ+dAUVAcDlz79uI5fhz7ptrc5J9a8mTXGKsTgLAY6Gmns3tYCuBJRlGw79hO
      9QsvYs7NMTE8RP/tNhQh+ML+g9hQSHd2krx6jdn/+J9A07Ki0DQUu53NqoLu9+Hq7CHUcQfF
      7cZWWYGtshLV58uvplUUiETQUimsDRLYZFWlmB0fwl62mYB7DCh2VllC3u8FAViGjqmnMTMF
      G94KgalndwuzrPzYs7DM3Od3ezFl/xMUu/rkQzGZhp51lDd0ktEwAIaeytnL6Knc56rNjrVQ
      ntyxomBmDEw9nftuMc/PPe+u48ItTYVlFVynlXMSyehpTCM7uWUt5Gna7aQSMYRpomo27C73
      Pe/DYrkW7VmWlZvQUhA524vlMgp33BaA3Y5WXQ2pBOlgGQD23btwuty4Dh2k5GtfJdXbhzk9
      lf39YlHMqRms/n6c8yHUmVmid7oRGRMyGTDNhU794nJyBaEoNAoLy2Zj7sZtnI2N2OvqsNdt
      wb55M4rDAXZ73mHkHhT+3Ln4cXfdk9znBeG2LKs4zaoEcLvtBlFTo7evh46Bw7TUVy11iSwq
      VD5e2ETbecJTY2jxQ6jlWe+ojJ5m9PKHADgP5HdtSMxOMHrjMwAqq7691LbIB88r9kcTjF35
      CMs0cRoRzn3/PwLQdOBozp7TiNC3cNx04OiSY7cvQKCqloneTvT6ZspajuSu5fv/xx+BEMue
      d/fx27/3v+ZKlQrP5K5z34EDWMFyAG6c+iltH/8CFIWt+59htPUS3mAlH/bdYHqoj9rmXbz5
      z/4YKPasKrxmYeUFMDrYz51bNxeuM0r3pY9RNY263QcZbLvCjmNfBNWTtSesAuHk7RUKtKP9
      FlPjo7g9Jcx2X2ZmpJ9N23bj/uLLWY+wzVvY0bIbkUiSmJ6i45PTqLrOlqoafIFSEILQ5ATh
      sVG0VBqPJYifP49IJLPPht2OGgyiBgJo5UE8zz2H+9BBWHamfmkAxSJvs4LrmRof4/a1ywBF
      cdDEaoPkvfTW1wAdPaWyq3H52dRCjzCl0CNs8Xs1/8fd3jrLHqtLjxVFydtmYb3O59lY4XG2
      3Hnvp4exoWmF6fPHhZ5YxV5wee86Je8yl0tbuPyhyJOuwBPqXvdz0TOvML/C87SC8wq9tvL3
      QSn4XQvut82O3ecDnw/d7SK2ZVPWxuFn8S/MVof6eplpy25G0PLWl3A4nZjT06R7+zBGRsiM
      jWHOz2O0dzB/4TNSR44Q+K2v42hspBCl4DdeLN+9PMK0z3mu1qAhZudL772xejOSpxJFUbBV
      VWGrqsp9JkwLYejEPvqIyE9/zuT/9l3smzejlgawVVaiBYO4psbJaCqaZkcfHEJxOrBsWnbP
      2IdYlr4GAlBwLLNYSyJZKYqmomgu/F/+Mp7nniP6wYfoAwNkxicwBgaxUimCqRRBIUBVmFB+
      hGK3ozgcbLVMMi4Xyu0u5hsa0Xw+MukU3okxMh4PSnlFtrm1UBNsjK64RHIPbFVVlP13+X5f
      dnVtlNbTJ0nPzFBa4qW+oRGhG+jj44Q62rHH4lj9g8Tu9IBlIUyTTVbWlVWcu8jmgA/D58M1
      MCIFIHmyUN1uVLcbvbKCuMuBp6YW78JqUD2d5trCCtkde/ezua4BEY8zNThA9/WrOKIxKuJJ
      bINDuKdnUe/0SAFIfn1RHQ5wOFATcdLBMtLBMkq21DExPARCULu5TgpA8hSysDGV0NSNIYDo
      WB+mYeB33X//HT06T2SkF4CKigd3UFkrYpODxMMhAp6H6/hbGYPISA8AJfUNuc/nxoaZHuoD
      QE8n72un/fxJMnqaQGVtzl4wkN+aJjo3zXTvLQAUuyuXxllZ8bl2Y3Mz3Oy9veS8se5bxOam
      URSFZEonMtKDVVq2/DWaJjc//gUAntLynI3Z6gqmerKx3Ryl+dGeZCxC12fZHe0a9hwiUJkd
      Sp8e7me8twOA3c+/js2evdcDbVeIzE7h8vqK8h3s7UZYFi6P53OvcTk2hABCg52Yhk558P5R
      51PhWUKD2ZtTHjx2n9RrT2Skh+jcNMGyh1sYZmX0gnLnr3N6uI/e6xcAaD54/+u5cfInJKNh
      mg8ey9lLbd4CSnYnu/D0ODc//NucvQe9V+HpCW5++KMl5w0FS+m9fgFFVWnce4TQYAdWvBqn
      e+kaIMvMcPkXP1xiY3rBBsCBd7+VS5+IhHLpfeVVOQFM9t/Jfd7y7Es5Ady5cpbhjhsEa+uo
      +cJLOTu9He2YZmZFnnFyHw/JU40UgOSpRgpA8lQjBSB5qpECkDzVrGoUaHroDpdvtjM+Z/CP
      fvcbuOUu4pInjFXVAK6yWt750ldpLrOIPP6o9xLJQ7OqGsDn85FJR3HXtFDlIR+XqSBNzklB
      gCXyTgw5BxbLWpr2IY+FEAgrb3vRWeJux46VHudsW/m4WsKycm5JD2IjUxDn7MHyXLg2uG+e
      GT1NeHoYAPfmfOil++WT0VP587bc/zwhCu53wW8ZHesjnUrgc2r3tZGKzhMeGcjm37Ij93lo
      cozW6ew6nlQilvt8uKuN+Pwsqs1WnOfkIJG5GTyaIDI2RMbQ8btshEe6AZgv8xEa7AJAc5Xk
      Pq8o8I8W1iodYqxMir6Bcfbu34OwBNqC72ehM1vOKaMoRJKSd2hQ1aVpH/JYUZQi55jFEqiq
      8sA2Pu84Z1stcLxR1Ww24sFs2ArDET1QngUOMXfneVdaYRqEBzsBqAjmZ2nvl48wMw91Xs5J
      p9ABSVGIjHSTikcfyIYRC+fyVJV3c5+Hp8eXnRAc6bxJ7/UL2J1uappacnnGxgcIT4wQKHET
      Huoio6epCJblbIeCZUX2Fj8X+/Jx3RRVWV0T6M7NK3R2d3Pm1AlG5xKrMSWRPBZWVQPsPPQC
      Ow+tVVEkkkePHAaVPNVIAUieaqQAJE81UgCSpxopAMlTzYZwiJFIHhXp6Dzh4aynWsBjlwKQ
      PF2kI3OEh7IzxIny4CqbQMJiuLeL4cm5tSibRPLIWZUABm9dZCCqMnjtDINz93folkg2GqsS
      wO3OXhrrN9NUF+RW1+BalUkieWSsSgAWAlVRPj8ugESygVmVAHZv38rgyAR9I7Ps2dFw/xMk
      kg3GqgTQ9IVj1DqTNBx8hcbyjRdNXCK5H6sbBlU0tu7YvUZFkUgePTkBmKZJKBRaE6Peyk3U
      H3whe1y7hXo0NLudkkAQxe3H7QsgLAv/5ib8VbXUubxYpplLW3jegxzbHA7cvlK0klI8/jLM
      jEFpXQxf9Wbq7G6EZa3Ytt3pwlniw+4rpyQQxNDTlCXj+Gq2UK/aQDyYPR3bkntyz2NFwVe9
      mXrFhsNdgt3hxFVeiy9YibtiU3a/+xVej6Kq+CprqdecD3eeouCr2kS95sDpKUGzO3BXbMJX
      XoUrWENGTz90mR7mnqg2G96yChSXN/v8CIGvtpFAZS2qJ4BlZlZ0TxSxDj1YIUTOY8g0TTRN
      y7nRqaqKZVk5r6LC48W0hec9yPHjsG2aJqqqrsr25+VpWdZ981/t9az0vLUu00p+B2BN8l8X
      AUgkTwrruBRCEJoc4vSnF9FNgeb08fKrr1AZyO/gKyyD1stXqNm+j9TUHbrHExw7fhSvM18s
      IxHi9KnThBIGFhqHjr3IjrqqonzG+zs4d7kNUwjc/mpeeeUF/G57UWkS0RCWzU1iZoTxiMnu
      nduwFwSuszJpLp/7hIGJeSxL0Lz3GY7sbcr5MS9HKpXE4XRT4HpMJDSHw+Njaq0IB8YAABCi
      SURBVKiHiOVmz47GIh/pscEBKuobmB3qZmQ6zraWXZT5XAXl0BmdmGZzdTntt28jXKXs3N6E
      XctbmRvrhdJG7PERfnnyAqW1jbz0/LO4bPnrScXmae/qZ3PTdqrKfHS3t9HQso8Cv/UlJJNJ
      3O78YIaeCHP9Zhe79u+j7+YloloZxw7vw1ZwwXPjfZz65AIpy87BYy+wZ+umIpvRiR4u3pll
      z64WaioCRUHqFskkI5w+dYr5uI4lVA4cfZGdDdX5e2JmmJ2ZJmNBOjzJSNzGruZ6ykv9BWl0
      rl84Q8/oLJYlaNx1kGf370ArKGtPTzfNzU3cvHCaztEI+545vn4CEJbgZkcvr775Dg6bipFO
      cK31Bq+8eDwXAjY8fBuzbCsjNz+mc97J28/vpKdnkAN7mnN2Wm+0sv/Yq/jdDsyMTvuNa4Sq
      X6N0YXfyTHye7vE4b77zJWyqQio+T2vrLV48ejBnIxOf5f2/+zmbt1TT0T3Ge+++TEf3EPt3
      NubSDN25ib9hP+8d8SGExXDnTQZnqtlamd96vPWz04zNp3J/z4Ri/NY3voF74S6mZ/v54U8/
      o77SydC8wlvP76arf5KdW/M/Ztv5CzSJKOc/G+BLb73I1FAfnl27cS48u6aR4sKlq9Q6k4ja
      A+yr9NE/MMyO5vyuDTbF4mpbF15jghfffBc1Ok7v0CR7mmpzac5+9Eu8Ww8w0d9FPNHA3MQw
      FVv34Vx4vs1UhDOfnieVWdxpIYOhlfHVt17I2ejtaqe2oYnzv3wfq2ove70pRubTNJbnBXv9
      Zievvv0eY3faGLh1ET3zHAe2b8qJPh2ZJomX+Oww57puUeIP0tTURMCbt9F64wb7nnsFv8eB
      mTHouHGF+ZpqypyLz5LBxU9PYLqrcBrzjMRteNzuIgGM997CXrOb9w4GEMJirLedvokQ2zfl
      HfVnhvtw+wLM6E7ee/ctOtpurGMNoCjYRZqrV68R8JUQj4bAVbxHvdNbykRHG+H5KFvry7nZ
      eovK5mIn40CJgxtXr1JWGiCTjhFOQGEYAdXhJhOd4urVFH6vi9D8LN6a7cVlUVUaW/Zy/Mhu
      GpqmqKspo+tsa5EAfD4/t9pamSsrRSPDzEyY53YW1yIVNfVUNHhyY8fTU1MUvJhRNBs79x/h
      yPYypuMqtT6Dj6+NFgngwLHDXPjsMkdf+woVZT7Gb51nKr6buoUt720OD7ubNtPa3stvv7MD
      zUxx6drtIgH4apoI9HzExfZRQmlIxyLsOfZaUVm9wSpaWrZT5rYTmhqjbS7CjoLvNYebuoYm
      SnyLe+0LZuajRTZKPC662q4zj5dGNU5r7yzPNR4sSuN2aPR1d9HfN8qbX/s6rZ9dwNq2KXdf
      VJsdu91Bc0sL21oE8WgI3TKLbJR6HVy/lv2NzXScUAz2FTyZmt3Nu7/xO/R1d2OmSylRqji0
      e2txWf0Brl9tJTJdhh2T2dkwBxqcRWkOHD7IT3/6S5KKm0sXPyNu2Na3DyAsg8G+PiIJHY+/
      jK0NW4oeGIQgGp7H5vFjR2dqLk5tTSXFSQTTY4NMzkawOUvY2tSIy15cj5t6kq7OTqKpDJW1
      9TRuqS5qlgghSCXj2F0lYBoYeopIyqK6vDgeQWRukqHRKVBt1DU2ESgpvoEPQiIRx+UuQUGQ
      SUYI6XYqS/PNPtM0s4HbNA2bqjI3PYW/ogpbUctAYOgZbA47ImMwF4kVbTnCQjT4iZEBZsMJ
      qjY3UB30FxrANFKEEwbBQPYBn58Zxx2oxVWgaSEsDN1A0WzYNHVp80RYzM3MYveUYKVjpISL
      qnJ/0e9jpKJ0dfXgLqulflMFqUQcry+Qq+WFMJmfj1JWlm3+CMtCKEpR01IIwcz4EBMzYdIZ
      wZ69e3A7it/NQggyhs5IXyeWv46m2uBdweQF0bkp7vQOIjQHTdtbCPrcS2wYqRjdd3rI2Dy0
      tGxf3+XQimqncVtLroBDQ4PU1TXkCm5lkly5eJGqrdu4c+MqgZoG/MFyvI7iwMZVmxup2pz9
      e35iEKOsAV9B9Xjl/CfcGZ7BblPp7ukj/fyr7GrI9xOMyAQ3BiIcrHfzVz/4FeWVQXYeOL5E
      AP5gNXuD2bd1KjzJZMhPdem9J/jGRgaprG0gp0czzbULZ/HWNjLScQNHWS3PHX++6JyT738P
      NjUT9Pho3r6DYGXVUsMo2B3ZJ1Wx2UhEI1AggHRkmp/89JeE4zGiKRuvvF22RACa3UUwkG9m
      ZHQdq+B7YaY48fOfMjQ1TzSWZNeRl3n9+BeK2syR6RFOnT6LITQyegpfZQNvv/FSUV+j5/YN
      brQPYHd0cU432XXwKEf2FAQPyaT4+IOfYPPXcPDZ5yhXprjUD688k6+lu26cp2NgCoC+/j5G
      x0Z55Y13CeR+4wxXzp6ic3Aq25y2Okgdf4U9W/PB2ZPhKU6eOk3CyPajBkemeP3N1wi48o94
      f/sVLlzvwuawk0rpRJOZdewDCItf/PCvmEos3lBBTJTwB99pyL1B5odukw5sRcx049t6mGM7
      y+jrH2JPS2POzrWPf8a1/mkWn7F4NMJv/tN/kxNAJh4i493Mt7/9NooCph7j3OX2IgHYfRWk
      x6/Qkfbz6m/8Y7YFM5y/3A7b8h220a4r/PzMDewLG1ilorMc/fI/KxLAiR9/j6F5I1f+mKHy
      z7/zT3ICiE10M6dVU5Meh4oWXju+jbbbdzh4YFf+vpgODh87RkkqTl9POx0JnX2HjuWux8qk
      +Yf/9j1C+sJDJix0Zzn/oiG/1GRmbIBDb/w2TUHB+Us3ifXfZLSqnM0FZb3wwfu0j0VyzbVY
      Ms3vfuf38CzUAKn5cUq3P8vrX97ChfMXCTrCtPZNcmhb/qEaGR3hxbe/TnXAhRCCwbYLjId1
      thb0AaZjGb71u99GUxWEZXD27GdYojlX00dGO/E0H+P1g42MjwwwpeqIRHETqKFpO2HDRfOO
      HdjsH/P6F1/DWRCBKpOMkHZV8e1vv7nwG8c5d+kWFAhgemyQfS++R3N1ts822dvG6FSIQH2+
      2T0+F+cb3/pHODQVIUwunzu7nk0gQSqVxulyLTwwgnA4gt+frx4zqTB3Budpad6EKTQSk110
      zHs4tq8xf/GpFLhcOaWmYmEUV4DFgSIhLDqvn+fc1Q6cTgfC5uHVN96irrL4jagnwnz80S/p
      GJjGV1rOa29/icbq/JvKMgwMRcFpyxrOpOOkhYOSgjZDOpXC7nLlHqpoJIzHG2BxMMky4nT0
      jNOyvRHTAqJDnOvVee3ZnTkbHZfOULLtGeqD7lz5BWpBky1731wuV+7vcDhCIJAvqx6f58SH
      JxifDXPktS+zvTTDUFhl59Z8J9hIpVAK7lsiGsbuCeTEKkydCx9/RM/wJFXbDvPW8V1cb+3k
      0MH9+euNzvLRhx8yGU6jYlHbvI8vvngEe0EtMdLdyslPL6PYHJhC5ehLr7OzsSZfy+sRrrT2
      c+DQPhyqwuTQLbombLz0XP6lANkmW29PL209g/zml98t+k4Iizutn/Hp5dvZ31hz8/Lrb9JQ
      na/BjWSEj098wOBUDJsqCG7ezhuvHsdd0FyeGurio9PnMLBjWRYHj72yjgIQgnhklqhhp8Lv
      oLO9i03bdlLmdeXeoHoihml34yDD1PQsvtIgJW5nUVvUMjPMzs7hKw3idNiYGBmmYlMd9oWH
      LpOO09kzSOPWrbgcDrTl2rII0okYkaRJWcCHYqYYD6XYUl1eUFxBJpNB0zTC87M4SgJ4XI6i
      9q5ppJidj1EaLMNh0xgZHmbTlrqih3d6pI+2rn68wVq+sHcnDltxecyMgZExURSF7p5utm/b
      jt3hzNmwMjozoSiV5WV0tV5hMiY4ePjQkmFdIQSWEGiqmhXRXVs03o1lmSiKVtxuFgJzYcLt
      ngiBaZmgqKiwpP2eTWJhmhaqpiEsC1XVCvoAgtmxfto6+zFR2LK1heb6mlxNCxANhykJ+ElF
      Q4xOhmncWn/XELVBPG1Q4rIzPTWFze0nGPAW3VchLCLzs1g2D/4SN/H5KSxPkNKCYIYZPUHb
      9WtMheI4vUGOHD6A9t3vfve79776lSMQnPv0E0xD59PTp3BV1zM+NEBDXV3u5kz3XObaqMHN
      Uz8hYfdjxOfRPGV4CuYBrp3+B670ThOenUJzB5jsuoxWuQPfwnXpsVlOnbuCaukMDA4SimcI
      BkuL2rJmKsrffP+/kUjpTM6Fqa4N8Nm5m2zf3phLM9FznR9/eJ6JgdtcvD1CJhGlrKoGZ8EP
      9dHff4/BmTgz09OUlFbQfu0CtY07cm9VPTTCycs9NNXX0Nd5ixu3B9i5Z2dRB7f7ykl+fOIi
      o0MDXLl8hZnZOWoad7L4fAtT59zFa2zyGVzsibCrqZquniEa6vJv90R4mo6uHqamppicnGSw
      p4OZlIPainytN9LfRf/QKJOTk0xOTtJ24yoVdTtwFTZ6FeVzRROaGqGrd4CpqWmmpqbouXUJ
      3dtIuTdvpK/zJsNjk0xPTzM1OcHV1naam5tygk7PDXL+9jjNTY1UlAUITfQTynioDuaHl0++
      /z4lNV7+7u9PUl1byexMiMqq8vyLMjbHL09fJD3ezs2xFG5VJ5mxUerLDy5M97fy9x9dQk9G
      SJoadn2cgTk7mwqGsa+e/wRboJb6uk24NJPb7XfWtxOsqhqRmRHw1xJ0qQzOZoq+91XVo1y8
      QqpyLy89e4BkaIy23gHKD7Tk0sRNJ++99zYlGkyPDTEVilF7Vz4ub5BDh59BANH5SXoHRthZ
      MGxoZdLUbj/A6y8dQZg6PXfa0U2ryEY0luKF19/GOd/NF2oPYJu+ych0nN11+WpW81bx9puv
      Y1cEI/29hJNGkQ0ro1NWUYPbYcMW2MRX99dw5WY/zx/ID9nteOYNSirukLL5cXs9vPvWO8X3
      zOZiz5YSfnziEhVbdpGIRUjpxfdNRRAOR/F6Fx4ARUXTih/kdCxGylRYrDc0e3Ft9iBYeppo
      Ko3HblvIxsZd2RCPxTDUfLPQbrcX5aMo2V26BdnNk1VVQ4jiPkBTy1bOfvAxL33lm7RUeui8
      dIrJ+A5qFwJR2lwlVPltXBtM8p1//CKqmebMhWs0bDqes5FMpDn26pvsrguSCM9yq3UCrWpL
      UT75ncNVbJqW23p7fbAsEZ2bFHf6hoWup0T7zRtiOhwXVnEiYegpEY7EhRBCRGdGxchMpChF
      Oh4Ww2PTwrKyNkd6b4tQosCCaYjBgUGRKTa8pCzTY8MinEgLIYQwjaTo6OwpSmIaaTEzF8r9
      PTHQLWZj6aI00fkpMTEbWcxY3Om8LdKZ4nwGulrFhx+dFGOzUWFZphgfH1+uQCI8OyFOfHL+
      HsW1xOxYvzjx4Qfik3OXRSxlLPnesqyiv03TWpqm8PpMU1ifd4/uUY7ifExhWg+Xj2VZYnqk
      V3z04Qfigw8/FG13Bpe1EZufFynTFEII0X+nS6TMu8piZsT8fFhYQohMKiq6B0aKvjeNtBga
      HBbGwnmR6UExNBEuSmOk4+LqhTPigw8+EKfOXBDheFrItUCSR4plZghFYgTL7h8Ter0Jz8/I
      bVEk64seGuGvf/Qr1IW+lGkk2bz7Bd554dEL4PyHf0fnaDg/jJ2Sq0El64wQFtFYAr8v2xm1
      TJ2pmTA11ZX3OXPtiUciOP3+3Ft/ZnJMCkDydCP3BpU81UgBSJ5qpAAkTzX/P3EkVFDyG1cB
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1 (2)' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='576' name='Sheet 3' width='576'>
      iVBORw0KGgoAAAANSUhEUgAAAkAAAAJACAYAAABlmtk2AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJ9UlEQVR4nO3WMQEAIAzAMMC/5+ECjiYKenbPzCwAgJDzOwAA4DUDBADkGCAAIMcAAQA5
      BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOA
      AIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggA
      yDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAc
      AwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFA
      AECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA
      5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECO
      AQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5Bgg
      ACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIA
      cgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDH
      AAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQ
      AJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEA
      OQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBj
      gACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYI
      AMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACA
      HAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgx
      QABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAME
      AOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABA
      jgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQY
      IAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgEC
      AHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAg
      xwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIM
      EACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwAB
      ADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQ
      Y4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkG
      CADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AA
      gBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADI
      MUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwD
      BADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAA
      QI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADk
      GCAAIMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4B
      AgByDBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAA
      IMcAAQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgBy
      DBAAkGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcA
      AQA5BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAA
      kGOAAIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5
      BggAyDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOA
      AIAcAwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggA
      yDFAAECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAc
      AwQA5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFA
      AECOAQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA
      5BggACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECO
      AQIAcgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5Bgg
      ACDHAAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIA
      cgwQAJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDH
      AAEAOQYIAMgxQABAjgECAHIMEACQY4AAgBwDBADkGCAAIMcAAQA5BggAyDFAAECOAQIAcgwQ
      AJBjgACAHAMEAOQYIAAgxwABADkGCADIMUAAQI4BAgByDBAAkGOAAIAcAwQA5BggACDHAAEA
      OQYIAMgxQABAjgECAHIup2IIfPpxjZMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
