<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1219.1533                               -->
<workbook original-version='18.1' source-build='2018.3.2 (20183.18.1219.1533)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='calc_segmentscore_optimized' inline='true' name='federated.0lelerv0uvx2a21bh05151r9xune' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='calc_segmentscore_optimized' name='textscan.1xmirpg17bumqt1ezu9wo08nxxge'>
            <connection class='textscan' directory='E:/UMKCStudies/Thesis/scoresgeneration' filename='calc_segmentscore_optimized.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1xmirpg17bumqt1ezu9wo08nxxge' name='calc_segmentscore_optimized.csv' table='[calc_segmentscore_optimized#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Unnamed: 0' ordinal='1' />
            <column datatype='string' name='streetname' ordinal='2' />
            <column datatype='integer' name='startstreet' ordinal='3' />
            <column datatype='integer' name='endstreet' ordinal='4' />
            <column datatype='real' name='segment_score' ordinal='5' />
            <column datatype='real' name='yelp_score' ordinal='6' />
            <column datatype='string' name='road_ids' ordinal='7' />
            <column datatype='string' name='address_nos' ordinal='8' />
            <column datatype='string' name='yelp_ids' ordinal='9' />
            <column datatype='string' name='yelp_address_nos' ordinal='10' />
            <column datatype='integer' name='accident_count' ordinal='11' />
            <column datatype='integer' name='business_count' ordinal='12' />
            <column datatype='real' name='ambulancer' ordinal='13' />
            <column datatype='real' name='bikedir' ordinal='14' />
            <column datatype='real' name='bikeinjury' ordinal='15' />
            <column datatype='real' name='bikepos' ordinal='16' />
            <column datatype='real' name='crashgrp' ordinal='17' />
            <column datatype='real' name='crashloc' ordinal='18' />
            <column datatype='real' name='crashtype' ordinal='19' />
            <column datatype='real' name='development' ordinal='20' />
            <column datatype='real' name='drvrinjury' ordinal='21' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>streetname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[streetname]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>streetname</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>startstreet</remote-name>
            <remote-type>20</remote-type>
            <local-name>[startstreet]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>startstreet</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>endstreet</remote-name>
            <remote-type>20</remote-type>
            <local-name>[endstreet]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>endstreet</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segment_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[segment_score]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>segment_score</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yelp_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[yelp_score]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>yelp_score</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>road_ids</remote-name>
            <remote-type>129</remote-type>
            <local-name>[road_ids]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>road_ids</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address_nos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address_nos]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>address_nos</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yelp_ids</remote-name>
            <remote-type>129</remote-type>
            <local-name>[yelp_ids]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>yelp_ids</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yelp_address_nos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[yelp_address_nos]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>yelp_address_nos</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>accident_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[accident_count]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>accident_count</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[business_count]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>business_count</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ambulancer</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ambulancer]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>ambulancer</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikedir</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bikedir]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>bikedir</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeinjury</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bikeinjury]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>bikeinjury</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikepos</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bikepos]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>bikepos</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crashgrp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[crashgrp]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>crashgrp</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crashloc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[crashloc]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>crashloc</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>crashtype</remote-name>
            <remote-type>5</remote-type>
            <local-name>[crashtype]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>crashtype</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>development</remote-name>
            <remote-type>5</remote-type>
            <local-name>[development]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>development</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>drvrinjury</remote-name>
            <remote-type>5</remote-type>
            <local-name>[drvrinjury]</local-name>
            <parent-name>[calc_segmentscore_optimized.csv]</parent-name>
            <remote-alias>drvrinjury</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Segment Score (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[segment_score]' peg='0' size='5' />
      </column>
      <column caption='Accident Count' datatype='integer' name='[accident_count]' role='measure' type='quantitative' />
      <column caption='Address Nos' datatype='string' name='[address_nos]' role='dimension' type='nominal' />
      <column caption='Ambulancer' datatype='real' name='[ambulancer]' role='measure' type='quantitative' />
      <column caption='Bikedir' datatype='real' name='[bikedir]' role='measure' type='quantitative' />
      <column caption='Bikeinjury' datatype='real' name='[bikeinjury]' role='measure' type='quantitative' />
      <column caption='Bikepos' datatype='real' name='[bikepos]' role='measure' type='quantitative' />
      <column caption='Business Count' datatype='integer' name='[business_count]' role='measure' type='quantitative' />
      <column caption='Crashgrp' datatype='real' name='[crashgrp]' role='measure' type='quantitative' />
      <column caption='Crashloc' datatype='real' name='[crashloc]' role='measure' type='quantitative' />
      <column caption='Crashtype' datatype='real' name='[crashtype]' role='measure' type='quantitative' />
      <column caption='Development' datatype='real' name='[development]' role='measure' type='quantitative' />
      <column caption='Drvrinjury' datatype='real' name='[drvrinjury]' role='measure' type='quantitative' />
      <column caption='Endstreet' datatype='integer' name='[endstreet]' role='measure' type='quantitative' />
      <column caption='Road Ids' datatype='string' name='[road_ids]' role='dimension' type='nominal' />
      <column caption='Segment Score' datatype='real' name='[segment_score]' role='measure' type='quantitative' />
      <column caption='Startstreet' datatype='integer' name='[startstreet]' role='measure' type='quantitative' />
      <column caption='Streetname' datatype='string' name='[streetname]' role='dimension' type='nominal' />
      <column caption='Yelp Address Nos' datatype='string' name='[yelp_address_nos]' role='dimension' type='nominal' />
      <column caption='Yelp Ids' datatype='string' name='[yelp_ids]' role='dimension' type='nominal' />
      <column caption='Yelp Score' datatype='real' name='[yelp_score]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.276106' measure-ordering='alphabetic' measure-percentage='0.723894' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='calc_segmentscore' inline='true' name='federated.0wjp9cx09ia2aa1g6nvux02zbqsz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='calc_segmentscore' name='textscan.0yqp2tx1izou0t1cpn74u0682kw3'>
            <connection class='textscan' directory='E:/UMKCStudies/Thesis/scoresgeneration' filename='calc_segmentscore.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0yqp2tx1izou0t1cpn74u0682kw3' name='calc_segmentscore.csv' table='[calc_segmentscore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Unnamed: 0' ordinal='1' />
            <column datatype='string' name='streetname' ordinal='2' />
            <column datatype='integer' name='startstreet' ordinal='3' />
            <column datatype='integer' name='endstreet' ordinal='4' />
            <column datatype='integer' name='segment_score' ordinal='5' />
            <column datatype='string' name='road_ids' ordinal='6' />
            <column datatype='string' name='address_nos' ordinal='7' />
            <column datatype='string' name='yelp_ids' ordinal='8' />
            <column datatype='string' name='yelp_address_nos' ordinal='9' />
            <column datatype='integer' name='accident_count' ordinal='10' />
            <column datatype='integer' name='business_count' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[calc_segmentscore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[calc_segmentscore.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[calc_segmentscore.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>streetname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[streetname]</local-name>
            <parent-name>[calc_segmentscore.csv]</parent-name>
            <remote-alias>streetname</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>startstreet</remote-name>
            <remote-type>20</remote-type>
            <local-name>[startstreet]</local-name>
            <parent-name>[calc_segmentscore.csv]</parent-name>
            <remote-alias>startstreet</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>endstreet</remote-name>
            <remote-type>20</remote-type>
            <local-name>[endstreet]</local-name>
            <parent-name>[calc_segmentscore.csv]</parent-name>
            <remote-alias>endstreet</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>segment_score</remote-name>
            <remote-type>20</remote-type>
            <local-name>[segment_score]</local-name>
            <parent-name>[calc_segmentscore.csv]</parent-name>
            <remote-alias>segment_score</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>road_ids</remote-name>
            <remote-type>129</remote-type>
            <local-name>[road_ids]</local-name>
            <parent-name>[calc_segmentscore.csv]</parent-name>
            <remote-alias>road_ids</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address_nos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address_nos]</local-name>
            <parent-name>[calc_segmentscore.csv]</parent-name>
            <remote-alias>address_nos</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yelp_ids</remote-name>
            <remote-type>129</remote-type>
            <local-name>[yelp_ids]</local-name>
            <parent-name>[calc_segmentscore.csv]</parent-name>
            <remote-alias>yelp_ids</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yelp_address_nos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[yelp_address_nos]</local-name>
            <parent-name>[calc_segmentscore.csv]</parent-name>
            <remote-alias>yelp_address_nos</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>accident_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[accident_count]</local-name>
            <parent-name>[calc_segmentscore.csv]</parent-name>
            <remote-alias>accident_count</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[business_count]</local-name>
            <parent-name>[calc_segmentscore.csv]</parent-name>
            <remote-alias>business_count</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' name='[Segment Score (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[segment_score]' peg='0' size='5' />
      </column>
      <column caption='Address Nos' datatype='string' name='[address_nos]' role='dimension' type='nominal' />
      <column caption='Endstreet' datatype='integer' name='[endstreet]' role='measure' type='quantitative' />
      <column caption='Road Ids' datatype='string' name='[road_ids]' role='dimension' type='nominal' />
      <column caption='Segment Score' datatype='integer' name='[segment_score]' role='measure' type='quantitative' />
      <column caption='Startstreet' datatype='integer' name='[startstreet]' role='measure' type='quantitative' />
      <column caption='Streetname' datatype='string' name='[streetname]' role='dimension' type='nominal' />
      <column caption='Yelp Address Nos' datatype='string' name='[yelp_address_nos]' role='dimension' type='nominal' />
      <column caption='Yelp Ids' datatype='string' name='[yelp_ids]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.472798' measure-ordering='alphabetic' measure-percentage='0.527202' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='calc_segmentscore' name='federated.0wjp9cx09ia2aa1g6nvux02zbqsz' />
          </datasources>
          <datasource-dependencies datasource='federated.0wjp9cx09ia2aa1g6nvux02zbqsz'>
            <column aggregation='None' datatype='integer' name='[Segment Score (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[segment_score]' peg='0' size='5' />
            </column>
            <column-instance column='[segment_score]' derivation='Count' name='[cnt:segment_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Segment Score (bin)]' derivation='None' name='[none:Segment Score (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Segment Score' datatype='integer' name='[segment_score]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.0wjp9cx09ia2aa1g6nvux02zbqsz].[cnt:segment_score:qk]</rows>
        <cols>[federated.0wjp9cx09ia2aa1g6nvux02zbqsz].[none:Segment Score (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0wjp9cx09ia2aa1g6nvux02zbqsz].[Segment Score (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='calc_segmentscore_optimized' name='federated.0lelerv0uvx2a21bh05151r9xune' />
          </datasources>
          <datasource-dependencies datasource='federated.0lelerv0uvx2a21bh05151r9xune'>
            <column aggregation='None' datatype='integer' name='[Segment Score (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[segment_score]' peg='0' size='5' />
            </column>
            <column-instance column='[segment_score]' derivation='Count' name='[cnt:segment_score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Segment Score (bin)]' derivation='None' name='[none:Segment Score (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Segment Score (bin)]' derivation='None' name='[none:Segment Score (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Segment Score' datatype='real' name='[segment_score]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lelerv0uvx2a21bh05151r9xune].[none:Segment Score (bin):ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Segment Score (bin):ok]' />
              <groupfilter function='member' level='[none:Segment Score (bin):ok]' member='0' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0lelerv0uvx2a21bh05151r9xune].[none:Segment Score (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0lelerv0uvx2a21bh05151r9xune].[cnt:segment_score:qk]' scope='rows' value='Count of Section Score' />
            <format attr='title' class='0' field='[federated.0lelerv0uvx2a21bh05151r9xune].[none:Segment Score (bin):qk]' scope='cols' value='Section Score' />
            <format attr='width' field='[federated.0lelerv0uvx2a21bh05151r9xune].[cnt:segment_score:qk]' value='80' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.0lelerv0uvx2a21bh05151r9xune].[cnt:segment_score:qk]</rows>
        <cols>[federated.0lelerv0uvx2a21bh05151r9xune].[none:Segment Score (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0lelerv0uvx2a21bh05151r9xune].[Segment Score (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F507D3CD-D577-4325-929E-F4918150E6AC}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0lelerv0uvx2a21bh05151r9xune].[none:Segment Score (bin):qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0lelerv0uvx2a21bh05151r9xune].[cnt:segment_score:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0lelerv0uvx2a21bh05151r9xune].[cnt:segment_score:qk]</field>
                  <field>[federated.0lelerv0uvx2a21bh05151r9xune].[none:Segment Score (bin):qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>539</value>
                <value>0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0lelerv0uvx2a21bh05151r9xune].[none:road_ids:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9C864F6-2B57-4DF3-91D9-FBA5C1DEB954}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='576' name='Sheet 1' width='576'>
      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
      59o5RNle7Ts3pLmr79LiloTe27FLZ3v71VzZWFjZAADAaDccgDzvjL7/f31HO98/pdzefXq7
      vkLKDOhMYrke+IjnltVPV6nnKN3frTOHLmrW8mVS7rwuyVFf+1ENxJKqaWhSnTeqaFmFamur
      FY1FNGdGufakHUmS67ryPO+DBd1oKzfMdV3Ztu3bWI7jXN9zyHieF+oex7dZv7aZIIS9x7D3
      J431KCm0PXqe5+u+Owhh30al4vRYwBGgKi3bsF7DdlKjcxZrVWu9FE2qed4S1X7EMz3PU//5
      dh05PqCKOWu1pjku5Sq0cHpMR4+2y3VyykVm6N47Z0iSLFlX/u/Itt2r6xj/RZUkT/6/aY6/
      Yfs11i+EvpBxXVeWZYW2x/HXz69tJghh7zHs/Um6br8aRp7nhf41DHt/UnF6vOEAZFlVWn7H
      PZrdtlJpxVSail/5TkT2R6043aF3juS1bPVK1VeVjC1L1GrFhk1a4Xly8mntf/opnc60KpPJ
      KJfNShUx9fW5Kp82dvHqaDSqaDR6dZW5vP9pNxqNKpn053ykbDarWCx2Xc9h43me4vF4aHvM
      5/PyPE+JRHg/KRn2HsPenzTWoyTF4/GPeOTU5Lqucrmcb/vuIDiOE+r+pOL0WJNgN2QAACAA
      SURBVOA5QI46dz+pP3/6TbnR8TuA3aSvf/urmvchz+nYsVuZ5lvVf/GM+i9KJVXNqnE69eaJ
      Pk2fVid3pEtHMs16oKFWNZ229u7do6GGuNovZrRmfnVhJQMAAOMV/CmwwYFSbXr8j/Sptb86
      8lzPUWlLq7wzR3X0ypKaWWVqWjZfy9OHtPfoMTnxat26ebVqFFf1spuV3rdfx7pGtXDFKk2v
      LS2sZAAAYLyCrwQ9a26Z9nX3aGCg/uoqy6rKPmTFCbWs2KCWFb/4nYYFN+u+BTdft8yKV6nt
      1o1qK6xQAACAqwoMQBl19/brxM9e0tefGV/2UVNgAAAAwSowAJXr5ocf180PP16cagAAAHxQ
      YAAa1r6f/oP+/mdva+jqMo4AAQCAya2oR4BGT27Xd3Yl1VKEwgAAACZKpJgrSzU2yd61X2eK
      uVIAAIAiK+oUmGenNVB2pz5flNIAAAAmRlGmwFZ+/AsaHhqRlShVaSpR3MNKAAAARVZgAJKc
      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
      6XZdziU16+bNenhjmxJBF3uD3GyP3nplm/a1n9Ool9SidQ/qzjUzle/cpx8/84p6cknNXr1F
      D21YMDV7zHZr14vbtedop5xIQs1L7tQn7lmmaN8JvbT1RbVfzKp+wa16YNMtqi+dwr+GnqfR
      7qP62Y9+qJGVj+vzH2tS5vJxvbT1RR29lFP9gtv04KbVqiuZmj327v+Zvrv9sCwvIqlZn/ji
      w5rhXtALz76ojp68pi1cpwc3rVJtamr2J3nqP7tfL77whs4O2Kpvu1OffnCFrEvHtPXZF3Wi
      19a0to/poU03qzo59U4cznYf03PPP6/j3VlJjoZ7hnTzZ7+m+2eNas8rL+jtjh6VTr9Jm+7Z
      qDl1KU25j2B4jvo7D+mVl3fpRE9alc1LdMdd6zW3JqKjbz6vHXtPyi5t0sfufUgrZldq6r2C
      kufmdaljr15+7S2dH46oZcla3bVuuWoTWb2/+3m9tu+UnLLp+ti9H9fyWRW/UY9T9bf2l/CU
      6buo4z2W7v3sH6hupEOvvX9MvTOmqalyarXpaVQ5NWj1qpjOlF15OZ1+7dt9Uis/9YQWlw3o
      tad36PhwmxaXB1vrjfLyI0q1rNPv3tWiZK5Hb778prpHK3R6zxmt+vQTWlTar1effk0nhhdo
      0VTs0Upq1i33ac39lYo4A9r5j1t1OjNP9sHjqlz5kL46v1wHXnlVxy4OqH5OXdDV3jDXyer0
      yTOqbpqhSElMctM6eqBD1as/oX89t1Tvbn9Vx7qHVDe7JuhSb4Cjgf6ENn7my7ql6Ur97rDe
      fblDdWs/qftbU9q/bYeOXRrW2pnVwZZ6o5w+7d95VHPu+7webS6Vnckr7o7owP4ONa7/tB6c
      Gde+l3bo2OWFuqWlMuhqf2PJhgV65HMLJEne6EXt3HVCrbPiOn/qsEZrV+vxfzVP5/bt0qlT
      Z9RSs1DJKfbHsuy0Tp3tUvMtn9RDC6t0bv+b6rjQpTrL0Zn+Wj365YcUv3RIbx3er77mO1Q/
      Bf+adDPDOts1qKX3f1GfmiYdefsdnb7QrXjVgDoHp+mTjz+saNdBvf3+u+pvul11v0GPU+3l
      /lDpTFblVY1qqEqpvKlFNeUpOaPZoMv6jUUi9bppTZtqS2PX/iLJ9OhS2TwtaShRvKxRtyyK
      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
    </thumbnail>
    <thumbnail height='576' name='Sheet 2' width='576'>
      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
      IYToOv8PjuXXdNIpMAcAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
